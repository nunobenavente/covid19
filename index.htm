<!doctype html>
<html>

<head>
	<meta charset="utf-8">

	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Playfair+Display">
    <!-- <style>
      body {
        font-family: 'Tangerine', serif;
        font-size: 48px;
      }
    </style> -->

	<script src="https://www.amcharts.com/lib/4/core.js"></script>
	<script src="https://www.amcharts.com/lib/4/charts.js"></script>
	<script src="https://www.amcharts.com/lib/4/themes/dark.js"></script>
	<script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
	<title>SARS-CoV-2 em Portugal e no Mundo</title>
	<meta property="og:title" content="SARS-CoV-2 em Portugal e no Mundo" />
	<meta property="og:type" content="website" />
	<meta property="og:description" content="Alguma infografia sobre a pandemia COVID-19" />
	<meta property="og:url" content="https://nunobenavente.github.io/covid19/" />
	<meta property="og:image" content="https://nunobenavente.github.io/covid19/og.PNG" />

	<!-- Headers para evitar cache -->
	<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
	<meta http-equiv="Pragma" content="no-cache" />
	<meta http-equiv="Expires" content="0" />

	<style>

		body{margin: 0px !important;
    padding: 0px !important;}

		h1 {
			font-family: 'Plaifair Display', serif;
			color: #000;
			margin-left: 40px; padding-top: 10px;
			font-weight: 400 ;
		}

		p {
			margin-left: 40px;
			padding-top: : 8px;
			margin-bottom: 10px;
			color: #eee;
			/* font-family: 'Playfair Display'; */
			font-size: 12px;
		}

		div {
			margin-top: 8px;
			background-color: #191e26;
			margin-bottom: 8px;
			/* margin-left: 8px */
			margin-right: 8px;
			border-style: hidden;
			border-width: thin;
			border-radius: 6px;
		}

		#loglogAmchartsDiv, #mortesMundoDiv {
			width: 80%;
			height: 800px;
			float:none;
			/*	border: 1px solid #aaa;*/
		}

		#chartPT, #chartPTstacked {
			width: 80%;
			height: 600px;
			float:none;
			/*	border: 1px solid #aaa;*/
		}

		#letalidadediv {
			width: 50%;
			height: 395px;
			float: none;
			/*clear:both;*/
		}

		#casospormilhaodiv {
			width: 50%;
			height: 395px;
			float: none;
			/*clear:both;*/
		}

		#obitospormilhaodiv {
			width: 50%;
			height: 395px;
			float: none;
			/*clear:both;*/
		}

		#testespormilhaodiv {
			width: 50%;
			height: 395px;
			float: none;
			/*clear:both;*/
		}

		#button {
		  /*padding: 10px;*/
		  font-size: 12px;
		  position: relative;
		  top: 5px;
		  left: 30px;
			z-index: 100;
		}
	</style>

</head>

<body style="background-color:#0f1216">
	<section style="background-color: rgb(255, 138, 0); height:140px; width:100%; top:0px">
		<h1>SARS-CoV-2 em Portugal e no Mundo</h1>
		<p style="color: #111">Página actualizada diariamente. Em alguns casos os gráficos podem reflectir os dados do dia anterior.<br><strong>CTRL+F5</strong> para actualizar.<br>
		<strong>30 Abril 2020 - </strong>Novo gráfico 'COVID-19 no Mundo - evolução dos óbitos'.</p>
	</section>

	<!-- <div id="botaodiv"><input type="button" value="Log -> Linear" onclick="toggle(loglogAmcharts, valueAxisY);" id="button" /></div> -->
	<!-- <div id="topo"></div> -->

	<div id="loglogAmchartsDiv"></div><section><p><b>Dados: </b>EU Open Data Portal e Johns Hopkins University</p><section>
	<div id="mortesMundoDiv"></div><section><p><b>Dados: </b>EU Open Data Portal e Johns Hopkins University</p></section>
	<div id="chartPT"></div><section><p><b>Dados: </b>DGS</p></section>
	<div id="chartPTstacked"></div><section><p><b>Dados: </b>DGS</p></section>
	<div id="testespormilhaodiv"></div>
	<section style="width: 50%;">
		<p><b>Dados: </b>WorldOMeter<b><br>Nota importante:</b> Os números apresentados (recolhidos de worldometers.info) podem não corresponder exactamente ao número de indivíduos testados, dadas as diferentes formas como cada país reporta os testes, devendo assim ser interpretados como aproximações.<br>Dois exemplos: o número de testes apresentado para Portugal, interpretando os dados da DGS, inclui os indivíduos que foram testados mais que uma vez, sendo o número efectivo de indivíduos testados consideravelmente inferior. O número mais próximo da realidade corresponderá à soma dos 'Casos Confirmados (positivos)' + 'Casos Não Confirmados (negativos)'. Já a Suécia, por outro lado, reporta o número de indivíduos testados e não o total de testes.</p>
	</section>
	<div id="casospormilhaodiv"></div><section><p><b>Dados: </b>Johns Hopkins University</p></section>
	<div id="letalidadediv"></div>
	<div id="obitospormilhaodiv"></div>

	<script>

		// Themes begin
		// am4core.useTheme(am4themes_animated);
		am4core.useTheme(am4themes_dark);
		// Themes end
		// Optimizacao CPU
		am4core.options.minPolylineStep = 5; // só plota pontos que estejam a uma distancia de pelo menos x px para poupar cpu
		//am4core.options.queue = true; // piorou
		am4core.options.onlyShowOnViewport = false; // grafico so inicia quando aparece no ecrã
		var BULLETDISTMIN = 5; // distancia minima entre bullets consecutivas - melhora bastante a performance quanto maior o numero

		// CONSTANTES
		var RADIUS = 2; // raio das bullets
		var DESVIOLABEL = 10; // distancia do label para a bullet
		var TAMANHOLETRA = 10;
		var DIMMED = am4core.color("#0a0");
		var POPPT = 10330000;

		var CORGRID = "#121212"

		var paisExtenso = {PT:"Portugal", BE:"Bélgica", DE:"Alemanha", ES:"Espanha", FR:"França", GB:"Reino Unido", IT:"Itália", LU:"Luxemburgo",
											NL:"Holanda", SE:"Suécia", CH:"Suiça", BR:"Brasil", KR:"Coreia do Sul", US:"Estados Unidos", GLOBAL:"Mundo"};

		var meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
		var dia = new Date();

////////////////////////////////////////////
		// GRAFICO PORTUGAL
		var chartPT = am4core.create("chartPT", am4charts.XYChart);
		chartPT.dataSource.url = "https://api.covid19api.com/dayone/country/portugal";
		//chartPT.dataSource.parser.options.dateFields = ["data"];
		chartPT.dateFormatter.inputDateFormat = "dd/MM/yyyy";
		//chartPT.numberFormatter.numberFormat = "#.00";
		chartPT.dataSource.events.on("parseended", function(ev){
		// parsed data is assigned to data source's `data` property
		ev.target.data = ev.target.data.slice(1, ev.target.data.length -1);
		var data = ev.target.data;
		//data = data.slice(1, data.length);

		var Dia = [];
	  for (var i = 1; i < data.length; i++) { // não considero o último dia porque a estatística de PT está sempre atrasada 1 dia
			//if (i = 0) {
			//	data[i]["dia"] = data[i]["Confirmed"];
	  		//}else{
		  		data[i]["dia"] = data[i]["Confirmed"] - data[i-1]["Confirmed"];		// Casos diários (total dia - total dia anterior)
			//}
				data[i]["letalidade"] = data[i]["Deaths"]/data[i]["Confirmed"]*100;
				data[i]["casosMilhao"] = data[i]["Confirmed"]/(POPPT/1000000);

			if (i >= 6) {		// Média dos últimos 7 dias
				if (i == 6) {
					data[i]["avg7"] = data[i]["Confirmed"] / 7;
				} else {
					data[i]["avg7"] = (data[i]["Confirmed"] - data[i-7]["Confirmed"]) / 7;
				}
			}
			if (i >= 13) {		// Média dos últimos 14 dias
				if (i == 13) {
					data[i]["avg14"] = data[i]["Confirmed"] / 14;
				} else {
					data[i]["avg14"] = (data[i]["Confirmed"] - data[i-14]["Confirmed"]) / 14;
				}
			}
		}

		});
		chartPT.dataSource.reloadFrequency = 1000*60*5; // faz o reload dos dados a cada x milisegundos (5 minutos escolhidos)


		// Titulo
		var title = chartPT.titles.create();
		var titulo = "[bold font-size: 18 #EEE]COVID-19 em Portugal - Evolução da epidemia[/]\n";
		title.text = titulo.concat("[font-size: 14 #EEE]Dados até ", Math.max(dia.getDate()-1, 1), " de ", meses[dia.getMonth()], "[/]");
		title.textAlign = "middle";

		// Eixos
		//	XX Datas
		var dateAxis = chartPT.xAxes.push(new am4charts.DateAxis());
		//dateAxis.title.text = "DATA";
		dateAxis.renderer.minGridDistance = 40;
		dateAxis.renderer.grid.template.location = 0; dateAxis.renderer.grid.template.strokeOpacity = 1; dateAxis.renderer.grid.template.stroke = am4core.color(CORGRID);
		dateAxis.renderer.labels.template.fontSize = 10;
		dateAxis.renderer.labels.template.fill = am4core.color("#EEE");
		dateAxis.renderer.ticks.template.disabled = false; dateAxis.renderer.ticks.template.strokeOpacity = 1;
		dateAxis.renderer.ticks.template.length = 2;
		dateAxis.extraMax = 0.01;
		dateAxis.tooltip.background.fill = am4core.color("#ee7d07"); dateAxis.tooltip.background.stroke = am4core.color("#171717");
		dateAxis.tooltip.fontSize = 12; dateAxis.tooltip.fontWeight = "bold";


		// YY Casos Totais - eixo da esquerda
		var valueAxisTot = chartPT.yAxes.push(new am4charts.ValueAxis());
		valueAxisTot.title.text = "[font-size:12 #eee]TOTAL DE CASOS CONFIRMADOS[/]";
		valueAxisTot.renderer.labels.template.fontSize = 10;
		valueAxisTot.renderer.labels.template.fill = am4core.color("#eee");
		valueAxisTot.renderer.grid.template.strokeOpacity = 0.1; valueAxisTot.renderer.grid.template.stroke = am4core.color(CORGRID);
		valueAxisTot.logarithmic = true;

		//YY Casos Diários - eixo da direita
		var valueAxisDta = chartPT.yAxes.push(new am4charts.ValueAxis());
		valueAxisDta.title.text = "[font-size:12 #ffc800]CASOS DIÁRIOS [/]/ [font-size:12 #a71616]MORTES[/] / [font-size:12 #166db4]RECUPERADOS[/]";
		valueAxisDta.renderer.labels.template.fontSize = 10;
		valueAxisDta.renderer.opposite = true;
		//valueAxisDta.max = 2000;
		valueAxisDta.renderer.grid.template.strokeOpacity = 1; valueAxisDta.renderer.grid.template.stroke = am4core.color("CORGRID");

		// SERIES
		// Series Casos Totais
		var seriesTotal = chartPT.series.push(new am4charts.LineSeries());

		seriesTotal.name = "TOTAL CASOS";
		seriesTotal.dataFields.valueY = "Confirmed";
		seriesTotal.dataFields.dateX = "Date";

		//seriesTotal.tooltipText = "[#eee font-size: 12px]TOTAL CASOS: [/][font-weight: bold]{total}[/]";
		seriesTotal.tooltip.pointerOrientation = "down"; // up, down, left, right, vertical, horizontal
		seriesTotal.tooltip.label.textAlign = "middle"; seriesTotal.tooltip.background.stroke = am4core.color("#ee7d07");
		seriesTotal.stroke = am4core.color("#ee7d07");
		seriesTotal.fill = am4core.color("#171717");
		seriesTotal.strokeWidth = 1.1;
		//seriesTotal.zIndex = 5;
		seriesTotal.fillOpacity = 0.03;

		var bullet = seriesTotal.bullets.push(new am4charts.CircleBullet());
		//bullet.fill = am4core.color("#0d1285"); // tooltips grab fill from parent by default
		bullet.circle.radius = RADIUS;
		bullet.tooltipText = "[font-size: 12px]{Date}\nTotal Casos: [/][bold font-size: 13px]{Confirmed}[/] [font-size: 11px](+{valueY.previousChangePercent.formatNumber('##.0')}%)\n[/]";
		bullet.fillOpacity = 1;

		var bulletHover = bullet.states.create("hover");
		bulletHover.properties.scale = 2;

		var seriesDia = chartPT.series.push(new am4charts.ColumnSeries());
		seriesDia.name = "CASOS DIÁRIOS";
		seriesDia.dataFields.valueY = "dia";
		seriesDia.dataFields.dateX = "Date";
		seriesDia.yAxis = valueAxisDta;
		seriesDia.calculatePercent = true;
		seriesDia.columns.template.width = am4core.percent(80);
		seriesDia.tooltipText = "[font-size: 12px]Casos Dia: [/][bold  font-size: 13px]{dia}[/] {valueY.previousChange.formatNumber('[#F11 font-size:11]#|[#0F0 font-size:11]#')}";
		seriesDia.tooltip.background.stroke = am4core.color("#000");
		seriesDia.strokeWidth = 0;
		//seriesDia.columns.template.fill = am4core.color("#ffc800");
		seriesDia.columns.template.fill = am4core.color("#f69b00");
		seriesDia.stacked = true;
		// seriesDia.heatRules.push({
		// 	"target": seriesDia.columns.template,
		// 	"property": "fill",
		// 	"min": am4core.color("#0e437d"),
		// 	"max": am4core.color("#EE3E32"),
		// 	"dataField": "valueY"
		// });

		var seriesAvg7 = chartPT.series.push(new am4charts.LineSeries());
		seriesAvg7.name = "Média 7 dias";
		seriesAvg7.dataFields.valueY = "avg7";
		seriesAvg7.dataFields.dateX = "Date";
		seriesAvg7.yAxis = valueAxisDta;
		seriesAvg7.calculatePercent = true;
		//seriesAvg7.tooltipText = "[font-size: 10px]Média 7 Dias:[/][bold  font-size: 10px]{valueY.formatNumber('#.')}[/] {valueY.previousChange.formatNumber('[#F11 font-size:11]#.|[#0F0 font-size:11]#.')}";
		seriesAvg7.strokeWidth = 1;
		seriesAvg7.stroke = am4core.color("#00ff75");

		var seriesAvg14 = chartPT.series.push(new am4charts.LineSeries());
		seriesAvg14.name = "Média 14 dias";
		seriesAvg14.dataFields.valueY = "avg14";
		seriesAvg14.dataFields.dateX = "Date";
		seriesAvg14.yAxis = valueAxisDta;
		seriesAvg14.calculatePercent = true;
		//seriesAvg14.tooltipText = "[font-size: 10px]Média 14 Dias:[/][bold  font-size: 10px]{valueY.formatNumber('#.')}[/] {valueY.previousChange.formatNumber('[#F11 font-size:11]#.|[#0F0 font-size:11]#.')}";
		seriesAvg14.strokeWidth = 1;
		seriesAvg14.stroke = am4core.color("#1b8a5a");

		var seriesMortes = chartPT.series.push(new am4charts.ColumnSeries());
		seriesMortes.name = "MORTES";
		seriesMortes.dataFields.valueY = "Deaths";
		seriesMortes.dataFields.dateX = "Date";
		seriesMortes.yAxis = valueAxisDta;
		seriesMortes.calculatePercent = true;
		seriesMortes.columns.template.width = am4core.percent(25);
		seriesMortes.tooltipText = "[font-size: 12px]Mortes: [/][bold  font-size: 13px]{Deaths}[/] {valueY.previousChange.formatNumber('[#ec4242 font-size:11]#|[#0F0 font-size:11]#')}\n[font-size: 12px]Letalidade: [/][bold font-size: 13]{letalidade.formatNumber('#.00')}%[/]";
		seriesMortes.tooltip.background.stroke = am4core.color("#000");
		seriesMortes.strokeWidth = 0;
		seriesMortes.columns.template.fill = am4core.color("#a71616");

		var seriesRecuperados = chartPT.series.push(new am4charts.ColumnSeries());
		seriesRecuperados.name = "RECUPERADOS";
		seriesRecuperados.dataFields.valueY = "Recovered";
		seriesRecuperados.dataFields.dateX = "Date";
		seriesRecuperados.yAxis = valueAxisDta;
		seriesRecuperados.calculatePercent = true;
		seriesRecuperados.columns.template.width = am4core.percent(30);
		seriesRecuperados.tooltipText = "[font-size: 12px]Recuperados: [/][bold  font-size: 13px]{Recovered}[/] {valueY.previousChange.formatNumber('[#0F0 font-size:11]#|[#F11 font-size:11]#')}\n";
		seriesRecuperados.tooltip.background.stroke = am4core.color("#000");
		seriesRecuperados.strokeWidth = 0;
		seriesRecuperados.columns.template.fill = am4core.color("#6497b1");


		// Legenda
		chartPT.legend = new am4charts.Legend();
		chartPT.legend.useDefaultMarker = false; // Legenda em vez de imitar linhas reverte para o quadrado colorido (default)
		var markerTemplate = chartPT.legend.markers.template; // vamos modificar o tamanho dos quadrados
		markerTemplate.width = 18;
		markerTemplate.height = 18;
		chartPT.legend.labels.template.text = "[bold font-size: 12]{name}[/]";
		chartPT.legend.labels.template.textDecoration = "none";
		var as = chartPT.legend.labels.template.states.getKey("active");
		as.properties.textDecoration = "line-through";
		as.properties.fill = am4core.color("#eee");

		// chart cursor
		chartPT.cursor = new am4charts.XYCursor();
		chartPT.cursor.behavior = "none";
		chartPT.cursor.xAxis = dateAxis;

		//chartPT.cursor.snapToSeries = seriesTotal;
		valueAxisTot.cursorTooltipEnabled = false;
		valueAxisDta.cursorTooltipEnabled = false;

		// Enable export
		chartPT.exporting.menu = new am4core.ExportMenu();

		// Botão Toggle Log-Linear
		var buttonYYPT = chartPT.plotContainer.createChild(am4core.Button);
		buttonYYPT.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
		buttonYYPT.label.fontSize = 12;
		buttonYYPT.padding(5, 5, 5, 5);
		buttonYYPT.width =90;
		buttonYYPT.align = "left";
		buttonYYPT.marginLeft = 15;
		buttonYYPT.events.on("hit", function() {
		  toggle(chartPT, valueAxisTot, buttonYYPT);
		});

		// axis ranges - Texto que aparece no gráfico
		var range = dateAxis.axisRanges.create();
		range.date = new Date(2020, 2, 22);
		range.endDate = new Date(2020, 4, 3);
		range.axisFill.fill = am4core.color("#eee");
		range.axisFill.fillOpacity = 0.05;
		range.grid.stroke = am4core.color("#eee");
		range.grid.strokeWidth = 1;
		range.grid.strokeOpacity = 0.3;

		range.label.text = "Início do estado de emergência";
		range.label.fontSize = 12; range.label.fill = am4core.color("#db2e2e");
		range.label.inside = true;
		range.label.rotation = 90;
		range.label.horizontalCenter = "right";
		range.label.verticalCenter = "bottom";

		var range1 = dateAxis.axisRanges.create();
		range1.date = new Date(2020, 4, 3);	// 3 Maio
		range1.endDate = new Date(2020,5,1); // Data intederminada
		range1.axisFill.fill = am4core.color("#aea");
		range1.axisFill.fillOpacity = 0.1;
		range1.grid.stroke = am4core.color("#aea");
		range1.grid.strokeWidth = 1;
		range1.grid.strokeOpacity = 0.5;

		range1.label.text = "Fim Estado Emergência / Início Estado Calamidade Pública";
		range1.label.fontSize = 12; range1.label.fill = am4core.color("#cfd734");
		range1.label.inside = true;
		range1.label.rotation = 90;
		range1.label.horizontalCenter = "right";
		range1.label.verticalCenter = "bottom";

		// var rangeStats = valueAxisTot.axisRanges.create();
		// rangeStats.value = 1000;
		// rangeStats.endValue = 1000;
		// //rangeStats.axisFill.fill = am4core.color("#eee");
		// rangeStats.axisFill.fillOpacity = 0.05;
		// //rangeStats.grid.stroke = am4core.color("#eee");
		// //rangeStats.grid.strokeWidth = 1;
		// rangeStats.grid.strokeOpacity = 0.01;
		//
		// rangeStats.label.text = "Início do estado de emergência\n";
		// rangeStats.label.fontSize = 12;
		// rangeStats.label.inside = true;
		// rangeStats.label.rotation = 0;
		// rangeStats.label.horizontalCenter = "right";
		// rangeStats.label.verticalCenter = "bottom";



		////////////////////////////////////////////
				// GRAFICO PORTUGAL STACKED
am4core.useTheme(am4themes_animated);

				var chartPTstacked = am4core.create("chartPTstacked", am4charts.XYChart);
				chartPTstacked.dataSource.url = "https://api.covid19api.com/dayone/country/portugal";
				//chartPTstacked.dataSource.parser.options.dateFields = ["data"];
				chartPTstacked.dateFormatter.inputDateFormat = "dd/MM/yyyy";
				//chartPTstacked.numberFormatter.numberFormat = "#.00";
				chartPTstacked.dataSource.events.on("parseended", function(ev){
				// parsed data is assigned to data source's `data` property
				ev.target.data = ev.target.data.slice(1, ev.target.data.length -1);	// retirei o último dia porque os dados são iguais aos do dia anterior (desactualizados)
				var data1 = ev.target.data;
				//data = data.slice(1, data.length);

			  for (var i = 0; i < data1.length; i++) { // não considero o último dia porque a estatística de PT está sempre atrasada 1 dia
						data1[i]["Activos"] = data1[i]["Confirmed"] - data1[i]["Deaths"] - data1[i]["Recovered"];
						data1[i]["letalidade"] = data1[i]["Deaths"]/data1[i]["Confirmed"]*100;
						data1[i]["casosMilhao"] = data1[i]["Confirmed"]/(POPPT/1000000);
				}

				});
				chartPTstacked.dataSource.reloadFrequency = 1000*60*60; // faz o reload dos dados a cada x milisegundos (60 minutos escolhidos)


				// Titulo
				var title1 = chartPTstacked.titles.create();
				var titulo1 = "[bold font-size: 18 #EEE]COVID-19 em Portugal - Evolução da epidemia - Casos com e sem desfecho[/]\n";
				title1.text = titulo1.concat("[font-size: 14 #EEE]Dados até ", Math.max(dia.getDate()-1, 1), " de ", meses[dia.getMonth()], "[/]");
				title1.textAlign = "middle";

				// Eixos
				//	XX Datas
				var dateAxisStacked = chartPTstacked.xAxes.push(new am4charts.DateAxis());
				//dateAxisStacked.title.text = "DATA";
				dateAxisStacked.renderer.minGridDistance = 40;
				dateAxisStacked.renderer.grid.template.location = 0; dateAxisStacked.renderer.grid.template.strokeOpacity = 1; dateAxisStacked.renderer.grid.template.stroke = am4core.color(CORGRID);
				dateAxisStacked.renderer.labels.template.fontSize = 10;
				dateAxisStacked.renderer.labels.template.fill = am4core.color("#EEE");
				dateAxisStacked.renderer.ticks.template.disabled = false; dateAxisStacked.renderer.ticks.template.strokeOpacity = 1;
				dateAxisStacked.renderer.ticks.template.length = 2;
				dateAxisStacked.extraMax = 0.02;
				dateAxisStacked.tooltip.background.fill = am4core.color("#ee7d07"); dateAxisStacked.tooltip.background.stroke = am4core.color("#171717");
				dateAxisStacked.tooltip.fontSize = 12; dateAxisStacked.tooltip.fontWeight = "bold";


				// YY - eixo da esquerda
				var valueAxisStacked = chartPTstacked.yAxes.push(new am4charts.ValueAxis());
				valueAxisStacked.title.text = "[font-size:12 #eee]CASOS[/]";
				valueAxisStacked.renderer.labels.template.fontSize = 10;
				valueAxisStacked.renderer.labels.template.fill = am4core.color("#eee");
				valueAxisStacked.renderer.grid.template.strokeOpacity = 0.1; valueAxisStacked.renderer.grid.template.stroke = am4core.color(CORGRID);
				valueAxisStacked.calculateTotals = true;
				//valueAxisStacked.logarithmic = true;

				// //YY Casos Diários - eixo da direita
				// var valueAxisDta = chartPT.yAxes.push(new am4charts.ValueAxis());
				// valueAxisDta.title.text = "[font-size:12 #ffc800]CASOS DIÁRIOS [/]/ [font-size:12 #a71616]MORTES[/] / [font-size:12 #166db4]RECUPERADOS[/]";
				// valueAxisDta.renderer.labels.template.fontSize = 10;
				// valueAxisDta.renderer.opposite = true;
				// //valueAxisDta.max = 2000;
				// valueAxisDta.renderer.grid.template.strokeOpacity = 1; valueAxisDta.renderer.grid.template.stroke = am4core.color("CORGRID");

				// SERIES

				var seriesMortesStacked = chartPTstacked.series.push(new am4charts.LineSeries());
				seriesMortesStacked.name = "MORTES";
				seriesMortesStacked.dataFields.valueY = "Deaths";
				seriesMortesStacked.dataFields.dateX = "Date";
				//seriesMortesStacked.yAxis = valueAxisDta;
				seriesMortesStacked.calculatePercent = true;
				//seriesMortesStacked.columns.template.width = am4core.percent(70);
				seriesMortesStacked.tooltipText = "[font-size: 12px]MORTES: [/][bold  font-size: 13px]{Deaths}[/] {valueY.previousChange.formatNumber('[#ec4242 font-size:11]#|[#0F0 font-size:11]#')}\n[font-size: 12px]Letalidade: [/][bold font-size: 13]{letalidade.formatNumber('#.0')}%[/]\n[font-size: 12px]% mostrados: [/][bold font-size: 12px]{valueY.totalPercent.formatNumber('#.0')}%[/]";
				seriesMortesStacked.tooltip.background.stroke = am4core.color("#000");
				seriesMortesStacked.strokeWidth = 0;
				//seriesMortesStacked.columns.template.fill = am4core.color("#a71616");
				seriesMortesStacked.stacked = true;
				seriesMortesStacked.legendSettings.itemValueText = "{valueY.totalPercent.formatNumber('#.0')}%";
				// LineSeries settings
				seriesMortesStacked.stroke = am4core.color("#a71616");
				seriesMortesStacked.fill = am4core.color("#a71616");
				seriesMortesStacked.strokeWidth = 2;
				seriesMortesStacked.fillOpacity = 0.3;

				// // Add label
			  // var labelBulletMortes = seriesMortesStacked.bullets.push(new am4charts.LabelBullet());
			  // labelBulletMortes.label.text = "[font-size: 10px]{valueY.totalPercent.formatNumber('#.0')}%";
			  // labelBulletMortes.locationY = 0.5;
				// labelBulletMortes.label.fill = am4core.color("#000");


				var seriesRecuperadosStacked = chartPTstacked.series.push(new am4charts.LineSeries());
				seriesRecuperadosStacked.name = "RECUPERADOS";
				seriesRecuperadosStacked.dataFields.valueY = "Recovered";
				seriesRecuperadosStacked.dataFields.dateX = "Date";
				//seriesRecuperadosStacked.yAxis = valueAxisDta;
				seriesRecuperadosStacked.calculatePercent = true;
				// seriesRecuperadosStacked.columns.template.width = am4core.percent(70);
				seriesRecuperadosStacked.tooltipText = "[font-size: 12px]RECUPERADOS: [/][bold  font-size: 13px]{Recovered}[/] {valueY.previousChange.formatNumber('[#0F0 font-size:11]#|[#F11 font-size:11]#')}\n[font-size: 12px]% mostrados: [/][bold font-size: 12px]{valueY.totalPercent.formatNumber('#.0')}%[/]";
				seriesRecuperadosStacked.tooltip.background.stroke = am4core.color("#000");
				seriesRecuperadosStacked.strokeWidth = 0;
				// seriesRecuperadosStacked.columns.template.fill = am4core.color("#6497b1");
				seriesRecuperadosStacked.stacked = true;
				seriesRecuperadosStacked.legendSettings.itemValueText = "{valueY.totalPercent.formatNumber('#.0')}%";
				// LineSeries settings
				seriesRecuperadosStacked.stroke = am4core.color("#6497b1");
				seriesRecuperadosStacked.fill = am4core.color("#6497b1");
				seriesRecuperadosStacked.strokeWidth = 2;
				seriesRecuperadosStacked.fillOpacity = 0.3;

				// // Add label
			  // var labelBulletRecuperados = seriesRecuperadosStacked.bullets.push(new am4charts.LabelBullet());
			  // labelBulletRecuperados.label.text = "[font-size: 10px]{valueY.totalPercent.formatNumber('#.0')}%";
			  // labelBulletRecuperados.locationY = 0.5;
				// labelBulletRecuperados.label.fill = am4core.color("#000");


				var seriesActivos = chartPTstacked.series.push(new am4charts.LineSeries());
				seriesActivos.name = "ACTIVOS (ainda sem desfecho)";
				seriesActivos.dataFields.valueY = "Activos";
				seriesActivos.dataFields.dateX = "Date";
				//seriesActivos.yAxis = valueAxisDta;
				seriesActivos.calculatePercent = true;
				// seriesActivos.columns.template.width = am4core.percent(70);
				seriesActivos.tooltipText = "[font-size: 12px]ACTIVOS: [/][bold  font-size: 13px]{Activos}[/] {valueY.previousChange.formatNumber('[#F11 font-size:11]#|[#0F0 font-size:11]#')}\n[font-size: 12px]% mostrados: [/][bold font-size: 12px]{valueY.totalPercent.formatNumber('#.0')}%[/]";
				seriesActivos.tooltip.background.stroke = am4core.color("#000");
				seriesActivos.strokeWidth = 0;
				// seriesActivos.columns.template.fill = am4core.color("#f69b00");
				seriesActivos.stacked = true;
				seriesActivos.legendSettings.itemValueText = "{valueY.totalPercent.formatNumber('#.0')}%";
				// LineSeries settings
				seriesActivos.stroke = am4core.color("#f69b00");
				seriesActivos.fill = am4core.color("#f69b00");
				seriesActivos.strokeWidth = 2;
				seriesActivos.fillOpacity = 0.2;

				// var bullet = seriesActivos.bullets.push(new am4charts.CircleBullet());
				// bullet.circle.radius = 2;
				// // Add label
			  // var labelBulletActivos = seriesActivos.bullets.push(new am4charts.LabelBullet());
			  // labelBulletActivos.label.text = "[font-size: 10px]{valueY.totalPercent.formatNumber('#.0')}%";
			  // labelBulletActivos.locationY = 0.5;
				// labelBulletActivos.label.fill = am4core.color("#000");


				// Legenda
				chartPTstacked.legend = new am4charts.Legend();
				chartPTstacked.legend.useDefaultMarker = false; // Legenda em vez de imitar linhas reverte para o quadrado colorido (default)
				var markerTemplate1 = chartPTstacked.legend.markers.template; // vamos modificar o tamanho dos quadrados
				markerTemplate1.width = 18;
				markerTemplate1.height = 18;
				chartPTstacked.legend.labels.template.text = "[bold font-size: 12]{name}[/]";
				chartPTstacked.legend.labels.template.textDecoration = "none";
				var as1 = chartPTstacked.legend.labels.template.states.getKey("active");
				as1.properties.textDecoration = "line-through";
				as1.properties.fill = am4core.color("#eee");

				// chart cursor
				chartPTstacked.cursor = new am4charts.XYCursor();
				chartPTstacked.cursor.behavior = "none";
				chartPTstacked.cursor.xAxis = dateAxisStacked;
				//chartPTstacked.cursor.snapToSeries = seriesTotal;
				valueAxisStacked.cursorTooltipEnabled = false;
				//valueAxisDta.cursorTooltipEnabled = false;

				//scrollbars
				chartPTstacked.scrollbarX = new am4core.Scrollbar();

				// scrollbarX.series.push(lineSeries); scrollbarX.series.push(lastPtSeries);
				// scrollbarX.series.push(lineSeries2); scrollbarX.series.push(lastPtSeries2);
				// scrollbarX.series.push(lineSeries7); scrollbarX.series.push(lastPtSeries7);
				//loglogAmcharts.scrollbarX = scrollbarX;
				//loglogAmcharts.scrollbarX.parent = loglogAmcharts.bottomAxesContainer;

				// Enable export
				chartPTstacked.exporting.menu = new am4core.ExportMenu();


				// axis ranges - Texto que aparece no gráfico
				var range1 = dateAxisStacked.axisRanges.create();
				range1.date = new Date(2020, 2, 22);
				range1.endDate = new Date(2020, 4, 3);
				range1.axisFill.fill = am4core.color("#eee");
				range1.axisFill.fillOpacity = 0.05;
				range1.grid.stroke = am4core.color("#eee");
				range1.grid.strokeWidth = 1;
				range1.grid.strokeOpacity = 0.3;

				range1.label.text = "Início do estado de emergência";
				range1.label.fontSize = 12; range1.label.fill = am4core.color("#db2e2e");
				range1.label.inside = true;
				range1.label.rotation = 90;
				range1.label.horizontalCenter = "right";
				range1.label.verticalCenter = "bottom";

				var range2 = dateAxisStacked.axisRanges.create();
				range2.date = new Date(2020, 3, 21);
				range2.axisFill.fill = am4core.color("#eee");
				range2.axisFill.fillOpacity = 0.05;
				range2.grid.stroke = am4core.color("#eee");
				range2.grid.strokeWidth = 1;
				range2.grid.strokeOpacity = 0.3;

				range2.label.text = "Recuperados ultrapassam Óbitos";
				range2.label.fontSize = 12; range2.label.fill = am4core.color("#26a600");
				range2.label.inside = true;
				range2.label.rotation = 90;
				range2.label.horizontalCenter = "right";
				range2.label.verticalCenter = "bottom";

				var range3 = dateAxisStacked.axisRanges.create();
				range3.date = new Date(2020, 4, 3);	// 3 Maio
				range3.endDate = new Date(2020, 5, 3);	// Data indeterminada
				range3.axisFill.fill = am4core.color("#aea");
				range3.axisFill.fillOpacity = 0.1;
				range3.grid.stroke = am4core.color("#aea");
				range3.grid.strokeWidth = 1;
				range3.grid.strokeOpacity = 0.5;

				range3.label.text = "Fim Estado Emergência / Início Estado Calamidade Pública";
				range3.label.fontSize = 12; range3.label.fill = am4core.color("#cfd734");
				range3.label.inside = true;
				range3.label.rotation = 90;
				range3.label.horizontalCenter = "right";
				range3.label.verticalCenter = "bottom";


//////////////////////////////////////////
		// GRAFICO LOG LOG MUNDO
		var loglogAmcharts = am4core.create("loglogAmchartsDiv", am4charts.XYChart);

		loglogAmcharts.dataSource.url = "dadosMundoAccess.json";
		loglogAmcharts.dataSource.reloadFrequency = 1000*60*30; // faz o reload dos dados a cada x milisegundos (30 minutos escolhidos)
		//loglogAmcharts.dataSource.url = "https://api.covid19api.com/dayone/country/portugal";
		//loglogAmcharts.dataSource.incremental = true;
	// 	loglogAmcharts.dataSource.events.on("parseended", function(ev){
	// 		// parsed data is assigned to data source's `data` property
	// 	  var data = ev.target.data;
	//
	// 	for (var i = 0; i < data.length; i++) {
	// 		//	data[i]["dia"] = data[i]["Confirmed"] - data[i-1]["Confirmed"];		// Casos diários (total dia - total dia anterior)
	// 			if (i == 0) { data[i]["ptx"] = data[i]["PT"]; }
	// 			if (i > 0) { data[i]["ptx"] = data[i]["PT"] + data[i-1]["ptx"]; }
	// 				if (i == 6) {
	// 					data[i]["pty"] = data[i]["Confirmed"] / 7;
	// 				} else {
	// 					data[i]["pty"] = Math.max(1, (data[i]["Confirmed"] - data[i-7]["Confirmed"]) / 7);
	// 				}
	// 			}
	// 	}
	//
	// });
	//

		loglogAmcharts.colors.list = [
			am4core.color("#EEE"), am4core.color("#EEE"), am4core.color("#EEE"), am4core.color("#EEE"),				// PT
			am4core.color("#ffda19"),am4core.color("#FFDA19"),	am4core.color("#FFDA19"),	am4core.color("#FFDA19"),// BE
			am4core.color("#FFE119"),am4core.color("#FFE119"), am4core.color("#FFE119"), am4core.color("#FFE119"),	// DE

			am4core.color("#F57D7D"), am4core.color("#F57D7D"), am4core.color("#F57D7D"), am4core.color("#F57D7D"),	// ES
			am4core.color("#b4c0ff"), am4core.color("#b4c0ff"), am4core.color("#b4c0ff"), am4core.color("#b4c0ff"),	// FR

			am4core.color("#4285f7"), am4core.color("#4285f7"), am4core.color("#4285f7"), am4core.color("#4285f7"),	// GB
			am4core.color("#BD0101"), am4core.color("#BD0101"), am4core.color("#BD0101"), am4core.color("#BD0101"),	// IT

			am4core.color("#00AA00"), am4core.color("#00AA00"), am4core.color("#00AA00"), am4core.color("#00AA00"),	// LU
			am4core.color("#FF8832"), am4core.color("#FF8832"), am4core.color("#FF8832"), am4core.color("#FF8832"),	// NE
			am4core.color("#a60e0e"), am4core.color("#a60e0e"), am4core.color("#a60e0e"), am4core.color("#a60e0e"),	// CH
			am4core.color("#0040ff"), am4core.color("#0040FF"), am4core.color("#0040FF"), am4core.color("#0040FF"),	// SE

			am4core.color("#00CC00"), am4core.color("#00CC00"), am4core.color("#00CC00"), am4core.color("#00CC00"), // BR
			am4core.color("#008888"), am4core.color("#008888"), am4core.color("#008888"), am4core.color("#008888"), // KR
			am4core.color("#642dda"), am4core.color("#642dda"), am4core.color("#642dda"), am4core.color("#642dda"), // US
			am4core.color("#CCC"), am4core.color("#CCC"), am4core.color("#CCC")				// Global
		];


		// Create axes
		var opacidadeLinhas = 1;

		// Create value axis XX
		var valueAxisX = loglogAmcharts.xAxes.push(new am4charts.ValueAxis());
		valueAxisX.title.text = '[font-size: 13]TOTAL CASOS CONFIRMADOS - [/][font-size: 12]clique na legenda para ligar/desligar países[/]';
		//valueAxisX.renderer.minGridDistance = 10;
		valueAxisX.renderer.labels.template.fontSize = 10;
		valueAxisX.logarithmic = true;
		var eixoXXTooltip = valueAxisX.tooltip;
		eixoXXTooltip.background.fill = am4core.color("#EE7D07"); eixoXXTooltip.background.stroke = am4core.color("#171717");
		valueAxisX.adapter.add("getTooltipText", function(texto){return "[font-size:11]TOTAL CASOS: [/][bold font-size:11]" + texto + "[/b]";});

		// Create value axis YY
		var valueAxisY = loglogAmcharts.yAxes.push(new am4charts.ValueAxis());
		valueAxisY.title.text = '[font-size: 13]CASOS CONFIRMADOS ÚLTIMOS 7 DIAS[/]';
		valueAxisY.renderer.labels.template.fontSize = 10;
		valueAxisY.logarithmic = true;
		var eixoYYTooltip = valueAxisY.tooltip;
		eixoYYTooltip.background.fill = am4core.color("#EE7D07"); eixoYYTooltip.background.stroke = am4core.color("#171717");
		eixoYYTooltip.rotation = 270;
		valueAxisY.adapter.add("getTooltipText", function(texto){return "[font-size:11]CASOS 7 DIAS: [/][bold font-size:11]" + texto + "[/b]";});

		valueAxisX.renderer.grid.template.disabled = true;
		//valueAxisX.renderer.labels.template.disabled = true;
		function createGrid(value) {
			var range = valueAxisX.axisRanges.create();
			range.value = value;
			var range = valueAxisY.axisRanges.create();
			range.value = value;

			//range.label.text = "{value}";
		}
		var j;
		var ms = [10, 100, 1000, 10000, 100000, 1000000, 10000000];
		var m;
		for (m of ms) {
			for (j = 1; j < 10; j++) {
				createGrid(j * m);
			}
		}
		valueAxisX.renderer.grid.template.strokeOpacity = 1;
		valueAxisX.renderer.grid.template.stroke = am4core.color("#121212");
		valueAxisX.renderer.grid.template.strokeWidth = 1;
		valueAxisY.renderer.grid.template.strokeOpacity = 1;
		valueAxisY.renderer.grid.template.stroke = am4core.color("#121212");
		valueAxisY.renderer.grid.template.strokeWidth = 1;


		var title = loglogAmcharts.titles.create();

		//dia = dia.toString();
		var titulo = "[bold font-size: 18]COVID-19 no Mundo - Evolução das epidemias, a partir do 100º caso[/]\n";
		title.text = titulo.concat("[font-size: 14]", dia.getDate(), " de ", meses[dia.getMonth()], "[/]");
		//title.text = "[bold font-size: 18]COVID-19 no Mundo - Evolução dos casos (a partir do 100º caso)[/]\n";
		title.textAlign = "middle";

		// Pre-zoom
		//loglogAmcharts.events.on("ready", function () {
		//			valueAxisX.zoomToValues(110000, 1300000, false, true);
		//		});


		valueAxisX.min = 100;
		valueAxisY.min = 40;

	//	for (var i = 0; i < 1; i++) {
  		createSeries("PT", opacidadeLinhas, 2, 10, false, paisExtenso);
			createSeries("BE", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("DE", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("ES", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("FR", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("GB", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("IT", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("LU", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("NL", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("CH", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("SE", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("BR", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("KR", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("US", opacidadeLinhas, 1, 10, false, paisExtenso);
			createSeries("GLOBAL", opacidadeLinhas, 1.5, 22, true, paisExtenso);
	//	}
		// Create series
		function createSeries(ISO2pais, opacidadeLinhas, espessura, offset, visivelInicio, paisExtenso) {
		  var series = loglogAmcharts.series.push(new am4charts.LineSeries());
		  series.dataFields.valueY = ISO2pais.concat("7");
		  series.dataFields.valueX = ISO2pais.concat("T");
		  series.name = ISO2pais;
			series.strokeOpacity = opacidadeLinhas;
			series.strokeWidth = espessura;
			series.showOnInit = false;
			series.hidden = visivelInicio;	// desligada no ínicio

			// render data points as bullets
			var lastPtSeries = loglogAmcharts.series.push(new am4charts.LineSeries());
			lastPtSeries.dataFields.valueY = ISO2pais.toLowerCase().concat("by");
			lastPtSeries.dataFields.valueX = ISO2pais.toLowerCase().concat("bx");
			lastPtSeries.hiddenInLegend = true;
			lastPtSeries.hidden = visivelInicio;

			var bullet = lastPtSeries.bullets.push(new am4charts.CircleBullet());
			var labelBullet = lastPtSeries.bullets.push(new am4charts.LabelBullet());
			labelBullet.label.text = series.name;
			bullet.circle.radius = 2;
			bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase(),"\n[font-size: 12px]Casos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal casos: [/][bold font-size: 13px]{valueX}[/]");
		 	lastPtSeries.tooltip.background.stroke = am4core.color("#000");

			var bulletHover = bullet.states.create("hover");
			bulletHover.properties.scale = 2;
			//bullet.circle.stroke = "#EEE";
			labelBullet.label.dx = offset;
			labelBullet.label.fontSize = 10;


			// Serie INICIO Estado de emergência
			var emergencySeries = loglogAmcharts.series.push(new am4charts.LineSeries());
			emergencySeries.dataFields.valueY = ISO2pais.toLowerCase().concat("emiy");
			emergencySeries.dataFields.valueX = ISO2pais.toLowerCase().concat("emix");
			emergencySeries.hiddenInLegend = true;
			emergencySeries.hidden = visivelInicio;

			var bullet = emergencySeries.bullets.push(new am4charts.CircleBullet());
			var labelBullet = emergencySeries.bullets.push(new am4charts.LabelBullet());
			labelBullet.label.text = series.name.concat(" Lock");
			bullet.circle.radius = 2.5;
			bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase()," Lockdown\n[font-size: 12px]Casos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal casos: [/][bold font-size: 13px]{valueX}[/]");
		 	emergencySeries.tooltip.background.stroke = am4core.color("#000");

			var bulletHover = bullet.states.create("hover");
			bulletHover.properties.scale = 2;
			//bullet.circle.stroke = "#EEE";
			labelBullet.label.dx = offset +10;
			labelBullet.label.fontSize = 9;

			// Serie FIM Estado de emergência
			var emergencySeries2 = loglogAmcharts.series.push(new am4charts.LineSeries());
			emergencySeries2.dataFields.valueY = ISO2pais.toLowerCase().concat("emfy");
			emergencySeries2.dataFields.valueX = ISO2pais.toLowerCase().concat("emfx");
			emergencySeries2.hiddenInLegend = true;
			emergencySeries2.hidden = visivelInicio;

			var bullet = emergencySeries2.bullets.push(new am4charts.CircleBullet());
			var labelBullet = emergencySeries2.bullets.push(new am4charts.LabelBullet());
			labelBullet.label.text = series.name.concat(" Fim Lock");
			bullet.circle.radius = 2.5;
			bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase()," Fim Lockdown\n[font-size: 12px]Casos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal casos: [/][bold font-size: 13px]{valueX}[/]");
		 	emergencySeries2.tooltip.background.stroke = am4core.color("#000");

			var bulletHover = bullet.states.create("hover");
			bulletHover.properties.scale = 2;
			//bullet.circle.stroke = "#EEE";
			labelBullet.label.dx = offset +20;
			labelBullet.label.fontSize = 9;

			series.events.on("hidden", function() {
				lastPtSeries.hide();
				emergencySeries.hide();
				emergencySeries2.hide();
			});

			series.events.on("shown", function() {
				lastPtSeries.show();
				emergencySeries.show();
				emergencySeries2.show();
			});

		}


		// Legenda
		loglogAmcharts.legend = new am4charts.Legend();
		loglogAmcharts.legend.useDefaultMarker = true; // Legenda em vez de imitar linhas reverte para o quadrado colorido (default)
		var markerTemplate = loglogAmcharts.legend.markers.template; // vamos modificar o tamanho dos quadrados
		markerTemplate.width = 18;
		markerTemplate.height = 18;
		loglogAmcharts.legend.labels.template.text = "[bold font-size: 12 {color}]{name}[/]";

		loglogAmcharts.legend.labels.template.textDecoration = "none";
		loglogAmcharts.legend.valueLabels.template.textDecoration = "none";

		var as = loglogAmcharts.legend.labels.template.states.getKey("active");
		as.properties.textDecoration = "line-through";
		as.properties.fill = am4core.color("#eee");


		// CURSOR XY
		loglogAmcharts.cursor = new am4charts.XYCursor();
		loglogAmcharts.cursor.behavior = "zoomXY"; // zoomX, zoomY, panX, panY, panXY, none, etc
		loglogAmcharts.cursor.lineX.strokeWidth = 0.5;
		//loglogAmcharts.cursor.lineX.strokeDasharray = "";
		loglogAmcharts.cursor.lineY.strokeWidth = 0.5;

		//scrollbars
		//loglogAmcharts.scrollbarX = new am4core.Scrollbar(); // funciona mal com o Cursor por isso desliguei
		loglogAmcharts.scrollbarY = new am4core.Scrollbar();
		var scrollbarX = new am4charts.XYChartScrollbar();
		// scrollbarX.series.push(lineSeries); scrollbarX.series.push(lastPtSeries);
		// scrollbarX.series.push(lineSeries2); scrollbarX.series.push(lastPtSeries2);
		// scrollbarX.series.push(lineSeries7); scrollbarX.series.push(lastPtSeries7);
		loglogAmcharts.scrollbarX = scrollbarX;
		loglogAmcharts.scrollbarX.parent = loglogAmcharts.bottomAxesContainer;

		// PRE ZOOM
		//loglogAmcharts.events.on("ready", function () {
		//			  yAxis.zoomToValues(4, 14, true);
		//		});
		loglogAmcharts.exporting.menu = new am4core.ExportMenu();

		var buttonYY = loglogAmcharts.plotContainer.createChild(am4core.Button);
		buttonYY.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
		buttonYY.label.fontSize = 12;
		buttonYY.padding(5, 5, 5, 5);
		buttonYY.width =90;
		buttonYY.align = "left";
		buttonYY.marginLeft = 15;
		buttonYY.events.on("hit", function() {
		  toggle(loglogAmcharts, valueAxisY, buttonYY);
		});

		var buttonXX = loglogAmcharts.plotContainer.createChild(am4core.Button);
		buttonXX.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
		buttonXX.label.fontSize = 12;
		buttonXX.padding(5, 5, 5, 5);
		buttonXX.width = 90;
		buttonXX.align = "right";
		buttonXX.marginRight = 15;
		buttonXX.dy = 500;
		buttonXX.events.on("hit", function() {
			toggle(loglogAmcharts, valueAxisX, buttonXX);
		});


		//////////////////////////////////////////
				// GRAFICO MORTES MUNDO
				var chartMortesMundo = am4core.create("mortesMundoDiv", am4charts.XYChart);

				chartMortesMundo.dataSource.url = "dadosMortesAccess.json";
				chartMortesMundo.dataSource.reloadFrequency = 1000*60*30; // faz o reload dos dados a cada x milisegundos (30 minutos escolhidos)


				chartMortesMundo.colors.list = [
					am4core.color("#EEE"), am4core.color("#EEE"), am4core.color("#EEE"), am4core.color("#EEE"),				// PT
					am4core.color("#ffda19"),am4core.color("#FFDA19"),	am4core.color("#FFDA19"),	am4core.color("#FFDA19"),// BE
					am4core.color("#FFE119"),am4core.color("#FFE119"), am4core.color("#FFE119"), am4core.color("#FFE119"),	// DE

					am4core.color("#F57D7D"), am4core.color("#F57D7D"), am4core.color("#F57D7D"), am4core.color("#F57D7D"),	// ES
					am4core.color("#b4c0ff"), am4core.color("#b4c0ff"), am4core.color("#b4c0ff"), am4core.color("#b4c0ff"),	// FR

					am4core.color("#4285f7"), am4core.color("#4285f7"), am4core.color("#4285f7"), am4core.color("#4285f7"),	// GB
					am4core.color("#BD0101"), am4core.color("#BD0101"), am4core.color("#BD0101"), am4core.color("#BD0101"),	// IT

					am4core.color("#00AA00"), am4core.color("#00AA00"), am4core.color("#00AA00"), am4core.color("#00AA00"),	// LU
					am4core.color("#FF8832"), am4core.color("#FF8832"), am4core.color("#FF8832"), am4core.color("#FF8832"),	// NE
					am4core.color("#a60e0e"), am4core.color("#a60e0e"), am4core.color("#a60e0e"), am4core.color("#a60e0e"),	// CH
					am4core.color("#0040ff"), am4core.color("#0040FF"), am4core.color("#0040FF"), am4core.color("#0040FF"),	// SE

					am4core.color("#00CC00"), am4core.color("#00CC00"), am4core.color("#00CC00"), am4core.color("#00CC00"), // BR
					am4core.color("#008888"), am4core.color("#008888"), am4core.color("#008888"), am4core.color("#008888"), // KR
					am4core.color("#642dda"), am4core.color("#642dda"), am4core.color("#642dda"), am4core.color("#642dda") // US
				];


				// Create axes
				var opacidadeLinhas = 1;

				// Create value axis XX
				var valueAxisX1 = chartMortesMundo.xAxes.push(new am4charts.ValueAxis());
				valueAxisX1.title.text = '[font-size: 13]TOTAL ÓBITOS - [/][font-size: 12]clique na legenda para ligar/desligar países[/]';
				//valueAxisX.renderer.minGridDistance = 10;
				valueAxisX1.renderer.labels.template.fontSize = 10;
				valueAxisX1.logarithmic = true;
				var eixoXXTooltip = valueAxisX1.tooltip;
				eixoXXTooltip.background.fill = am4core.color("#EE7D07"); eixoXXTooltip.background.stroke = am4core.color("#171717");
				valueAxisX1.adapter.add("getTooltipText", function(texto){return "[font-size:11]TOTAL ÓBITOS: [/][bold font-size:11]" + texto + "[/b]";});

				// Create value axis YY
				var valueAxisY1 = chartMortesMundo.yAxes.push(new am4charts.ValueAxis());
				valueAxisY1.title.text = '[font-size: 13]ÓBITOS ÚLTIMOS 7 DIAS[/]';
				valueAxisY1.renderer.labels.template.fontSize = 10;
				valueAxisY1.logarithmic = true;
				var eixoYYTooltip = valueAxisY1.tooltip;
				eixoYYTooltip.background.fill = am4core.color("#EE7D07"); eixoYYTooltip.background.stroke = am4core.color("#171717");
				eixoYYTooltip.rotation = 270;
				valueAxisY1.adapter.add("getTooltipText", function(texto){return "[font-size:11]ÓBITOS 7 DIAS: [/][bold font-size:11]" + texto + "[/b]";});

				valueAxisX1.renderer.grid.template.disabled = true;
				//valueAxisX.renderer.labels.template.disabled = true;
				function createGrid1(value) {
					var range = valueAxisX1.axisRanges.create();
					range.value = value;
					var range = valueAxisY1.axisRanges.create();
					range.value = value;

					//range.label.text = "{value}";
				}
				var j;
				var ms = [10, 100, 1000, 10000, 100000, 1000000, 10000000];
				var m;
				for (m of ms) {
					for (j = 1; j < 10; j++) {
						createGrid1(j * m);
					}
				}
				valueAxisX1.renderer.grid.template.strokeOpacity = 1;
				valueAxisX1.renderer.grid.template.stroke = am4core.color("#121212");
				valueAxisX1.renderer.grid.template.strokeWidth = 1;
				valueAxisY1.renderer.grid.template.strokeOpacity = 1;
				valueAxisY1.renderer.grid.template.stroke = am4core.color("#121212");
				valueAxisY1.renderer.grid.template.strokeWidth = 1;


				var title = chartMortesMundo.titles.create();

				//dia = dia.toString();
				var titulo = "[bold font-size: 18]COVID-19 no Mundo - Evolução dos óbitos[/]\n";
				title.text = titulo.concat("[font-size: 14]", dia.getDate(), " de ", meses[dia.getMonth()], "[/]");
				//title.text = "[bold font-size: 18]COVID-19 no Mundo - Evolução dos casos (a partir do 100º caso)[/]\n";
				title.textAlign = "middle";


				//valueAxisX.min = 100;
				// valueAxisY.min = 40;

		  		createSeries2("PT", opacidadeLinhas, 2, 10, false, paisExtenso);
					createSeries2("BE", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("DE", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("ES", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("FR", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("GB", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("IT", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("LU", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("NL", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("CH", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("SE", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("BR", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("KR", opacidadeLinhas, 1, 10, false, paisExtenso);
					createSeries2("US", opacidadeLinhas, 1, 10, false, paisExtenso);

				// Create series
				function createSeries2(ISO2pais, opacidadeLinhas, espessura, offset, visivelInicio, paisExtenso) {
				  var series = chartMortesMundo.series.push(new am4charts.LineSeries());
				  series.dataFields.valueY = ISO2pais.concat("7");
				  series.dataFields.valueX = ISO2pais.concat("T");
				  series.name = ISO2pais;
					series.strokeOpacity = opacidadeLinhas;
					series.strokeWidth = espessura;
					series.showOnInit = false;
					series.hidden = visivelInicio;	// desligada no ínicio

					// render data points as bullets
					var lastPtSeries = chartMortesMundo.series.push(new am4charts.LineSeries());
					lastPtSeries.dataFields.valueY = ISO2pais.toLowerCase().concat("by");
					lastPtSeries.dataFields.valueX = ISO2pais.toLowerCase().concat("bx");
					lastPtSeries.hiddenInLegend = true;
					lastPtSeries.hidden = visivelInicio;

					var bullet = lastPtSeries.bullets.push(new am4charts.CircleBullet());
					var labelBullet = lastPtSeries.bullets.push(new am4charts.LabelBullet());
					labelBullet.label.text = series.name;
					bullet.circle.radius = 2;
					bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase(),"\n[font-size: 12px]Óbitos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal óbitos: [/][bold font-size: 13px]{valueX}[/]");
				 	lastPtSeries.tooltip.background.stroke = am4core.color("#000");

					var bulletHover = bullet.states.create("hover");
					bulletHover.properties.scale = 2;
					//bullet.circle.stroke = "#EEE";
					labelBullet.label.dx = offset;
					labelBullet.label.fontSize = 10;


					// Serie INICIO Estado de emergência
					var emergencySeries = chartMortesMundo.series.push(new am4charts.LineSeries());
					emergencySeries.dataFields.valueY = ISO2pais.toLowerCase().concat("emiy");
					emergencySeries.dataFields.valueX = ISO2pais.toLowerCase().concat("emix");
					emergencySeries.hiddenInLegend = true;
					emergencySeries.hidden = visivelInicio;

					var bullet = emergencySeries.bullets.push(new am4charts.CircleBullet());
					var labelBullet = emergencySeries.bullets.push(new am4charts.LabelBullet());
					labelBullet.label.text = series.name.concat(" Lock");
					bullet.circle.radius = 2.5;
					bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase()," Lockdown\n[font-size: 12px]Óbitos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal óbitos: [/][bold font-size: 13px]{valueX}[/]");
				 	emergencySeries.tooltip.background.stroke = am4core.color("#000");

					var bulletHover = bullet.states.create("hover");
					bulletHover.properties.scale = 2;
					//bullet.circle.stroke = "#EEE";
					labelBullet.label.dx = offset +10;
					labelBullet.label.fontSize = 9;

					// Serie FIM Estado de emergência
					var emergencySeries2 = chartMortesMundo.series.push(new am4charts.LineSeries());
					emergencySeries2.dataFields.valueY = ISO2pais.toLowerCase().concat("emfy");
					emergencySeries2.dataFields.valueX = ISO2pais.toLowerCase().concat("emfx");
					emergencySeries2.hiddenInLegend = true;
					emergencySeries2.hidden = visivelInicio;

					var bullet = emergencySeries2.bullets.push(new am4charts.CircleBullet());
					var labelBullet = emergencySeries2.bullets.push(new am4charts.LabelBullet());
					labelBullet.label.text = series.name.concat(" Fim Lock");
					bullet.circle.radius = 2.5;
					bullet.tooltipText = "[font-size: 12px bold]".concat(paisExtenso[ISO2pais].toUpperCase()," Fim Lockdown\n[font-size: 12px]Óbitos 7 dias: [/][bold font-size: 13px]{valueY}[/]\n[font-size: 12px]\nTotal óbitos: [/][bold font-size: 13px]{valueX}[/]");
				 	emergencySeries2.tooltip.background.stroke = am4core.color("#000");

					var bulletHover = bullet.states.create("hover");
					bulletHover.properties.scale = 2;
					//bullet.circle.stroke = "#EEE";
					labelBullet.label.dx = offset +20;
					labelBullet.label.fontSize = 9;

					series.events.on("hidden", function() {
						lastPtSeries.hide();
						emergencySeries.hide();
						emergencySeries2.hide();
					});

					series.events.on("shown", function() {
						lastPtSeries.show();
						emergencySeries.show();
						emergencySeries2.show();
					});

				}


				// Legenda
				chartMortesMundo.legend = new am4charts.Legend();
				chartMortesMundo.legend.useDefaultMarker = true; // Legenda em vez de imitar linhas reverte para o quadrado colorido (default)
				var markerTemplate = chartMortesMundo.legend.markers.template; // vamos modificar o tamanho dos quadrados
				markerTemplate.width = 18;
				markerTemplate.height = 18;
				chartMortesMundo.legend.labels.template.text = "[bold font-size: 12 {color}]{name}[/]";

				chartMortesMundo.legend.labels.template.textDecoration = "none";
				chartMortesMundo.legend.valueLabels.template.textDecoration = "none";

				var as = chartMortesMundo.legend.labels.template.states.getKey("active");
				as.properties.textDecoration = "line-through";
				as.properties.fill = am4core.color("#eee");


				// CURSOR XY
				chartMortesMundo.cursor = new am4charts.XYCursor();
				chartMortesMundo.cursor.behavior = "zoomXY"; // zoomX, zoomY, panX, panY, panXY, none, etc
				chartMortesMundo.cursor.lineX.strokeWidth = 0.5;
				//chartMortesMundo.cursor.lineX.strokeDasharray = "";
				chartMortesMundo.cursor.lineY.strokeWidth = 0.5;

				//scrollbars
				//chartMortesMundo.scrollbarX = new am4core.Scrollbar(); // funciona mal com o Cursor por isso desliguei
				chartMortesMundo.scrollbarY = new am4core.Scrollbar();
				var scrollbarX = new am4charts.XYChartScrollbar();

				chartMortesMundo.scrollbarX = scrollbarX;
				chartMortesMundo.scrollbarX.parent = chartMortesMundo.bottomAxesContainer;

				chartMortesMundo.exporting.menu = new am4core.ExportMenu();

				var buttonYY1 = chartMortesMundo.plotContainer.createChild(am4core.Button);
				buttonYY1.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
				buttonYY1.label.fontSize = 12;
				buttonYY1.padding(5, 5, 5, 5);
				buttonYY1.width =90;
				buttonYY1.align = "left";
				buttonYY1.marginLeft = 15;
				buttonYY1.events.on("hit", function() {
				  toggle(chartMortesMundo, valueAxisY1, buttonYY1);
				});

				var buttonXX1 = chartMortesMundo.plotContainer.createChild(am4core.Button);
				buttonXX1.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
				buttonXX1.label.fontSize = 12;
				buttonXX1.padding(5, 5, 5, 5);
				buttonXX1.width = 90;
				buttonXX1.align = "right";
				buttonXX1.marginRight = 15;
				buttonXX1.dy = 500;
				buttonXX1.events.on("hit", function() {
					toggle(chartMortesMundo, valueAxisX1, buttonXX1);
				});




//////////////////////////////////////////////////////
		// GRAFICO LETALIDADE
		// Create chart instance
	var chart3 = am4core.create("letalidadediv", am4charts.XYChart);
		chart3.dataSource.url = "stats.json";

		chart3.events.on("beforedatavalidated", function(ev) {
  		chart3.data.sort(function(a, b) {
    		return (b.letalidade - a.letalidade);
  		});
		});


		// // Add data
		// chart.data = [{
		// 	"name": "IT",
		// 	"points": 12.97,
		// 	"color": chart.colors.next(),
		// 	"bullet": "./flags/IT.png",
		// 	//"bullet": "https://www.amcharts.com/lib/images/faces/A04.png"
		// 	"media": 6.19,
		// 	"obitos": 21067
		// }, {
		// 	"name": "GB",
		// 	"points": 12.79,
		// 	"color": chart.colors.next(),
		// 	"bullet": "./flags/GB.png",
		// 	"media": 6.19,
		// 	"obitos": 12125
		// }, {
		// 	"name": "NL",
		// 	"points": 10.71,
		// 	"color": chart.colors.next(),
		// 	"bullet": "./flags/NL.png",
		// 	"media": 6.19,
		// 	"obitos": 2955
		// }];

		var title = chart3.titles.create();
		title.text = "[bold font-size: 18]Letalidade[/]\n(óbitos/casos confirmados)";
		title.textAlign = "middle";

		// Create axes
		var categoryAxis = chart3.xAxes.push(new am4charts.CategoryAxis());
		categoryAxis.dataFields.category = "country";
		categoryAxis.renderer.grid.template.disabled = true;
		categoryAxis.renderer.minGridDistance = 30;
		categoryAxis.renderer.inside = true;
		categoryAxis.renderer.labels.template.fill = am4core.color("#fff");
		categoryAxis.renderer.labels.template.fontSize = 10;


		var valueAxis = chart3.yAxes.push(new am4charts.ValueAxis());
		valueAxis.renderer.grid.template.strokeDasharray = "4,4";
		valueAxis.renderer.labels.template.disabled = false;
		//valueAxis.title.text = "%";
		//valueAxis.title.fontSize = 12;
		valueAxis.numberFormatter = new am4core.NumberFormatter();
		valueAxis.numberFormatter.numberFormat = "#'%'"
		//valueAxis.renderer.labels.template.adapter.add("text", function(text) {
		// return text ;});
		valueAxis.renderer.labels.template.fontSize = 10;
		valueAxis.min = 0;
		valueAxis.extraTooltipPrecision = 1;

		// Do not crop bullets
		chart3.maskBullets = false;

		// Remove padding
		//chart3.paddingBottom = 0;

		chart3.numberFormatter.numberFormat = "#.00";

		// Create series
		var series = chart3.series.push(new am4charts.ColumnSeries());
		series.dataFields.valueY = "letalidade";
		series.calculatePercent = true;
		series.dataFields.categoryX = "country";
		//series.columns.template.propertyFields.fill = "color";
		//series.columns.template.propertyFields.stroke = "color";
		series.columns.template.column.cornerRadiusTopLeft = 4;
		series.columns.template.column.cornerRadiusTopRight = 4;
		series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}%[/b] (Óbitos: [bold]{obitos.formatNumber('#')})[/b]";
		series.strokeWidth = 0;

		series.heatRules.push({
			"target": series.columns.template,
			"property": "fill",
			"min": am4core.color("#2a4e75"),
			"max": am4core.color("#EE3E32"),
			"dataField": "valueY"
		});


		// Add bullets
		var bullet = series.bullets.push(new am4charts.Bullet());
		var image = bullet.createChild(am4core.Image);
		image.horizontalCenter = "middle";
		image.verticalCenter = "bottom";
		image.dy = 8; // vertical offset. can be negative to move upwards
		image.width = am4core.percent(60); // reducao do tamanho para 60%
		image.y = am4core.percent(100);
		image.propertyFields.href = "bullet";
		image.tooltipText = series.columns.template.tooltipText;
		image.propertyFields.fill = am4core.color("#eee");
		image.filters.push(new am4core.DropShadowFilter());

		// nova bullet para por valor na barra
		var label = series.columns.template.createChild(am4core.Label);
		label.text = "[#eee]{valueY}%[/]";
		label.align = "center";
		label.valign = "top";
		label.zIndex = 2;
		label.strokeWidth = 0; label.fontSize = 8; label.paddingTop = 10;


		//// series da media global (linha)
		//		var lineSeries = chart.series.push(new am4charts.LineSeries());
		//		lineSeries.name = "Global";
		//		lineSeries.dataFields.valueY = "media";
		//		lineSeries.dataFields.categoryX = "name";
		//
		//		lineSeries.stroke = am4core.color("#eee");
		//		lineSeries.strokeWidth = 2;
		//		lineSeries.tooltip.label.textAlign = "middle";
		//
		//		var bullet = lineSeries.bullets.push(new am4charts.Bullet());
		//		bullet.fill = am4core.color("#333"); // tooltips grab fill from parent by default
		//		bullet.tooltipText = "[#eee font-size: 12px]MÉDIA GLOBAL:[/][font-weight: bold] {media}%[/]"
		//		var circle = bullet.createChild(am4core.Circle);
		//		circle.radius = 1;
		//		circle.fill = am4core.color("#eee");
		//		circle.strokeWidth = 1;

		// Create value axis range - LINHA DA MEDIA QUE ATRAVESSA O GRAFICO
		var range = valueAxis.axisRanges.create();
		//range.calculatePercent = true;

		range.value = 6.36; // VALOR DA MÉDIA GLOBAL
		var media = range.value;
		range.grid.stroke = am4core.color("#eee");
		range.grid.strokeWidth = 1;
		range.grid.strokeOpacity = 0.9;
		range.label.inside = true;
		var str1 = "[#eee font-size: 12px]MÉDIA GLOBAL: [/][font-weight: bold]";
		range.label.text = str1.concat(media.toString(), "%[/]");
		range.label.fill = range.grid.stroke;
		range.label.align = "right";
		range.label.verticalCenter = "bottom";
		chart3.seriesContainer.zIndex = -1; // envia a series para tras da linha da media


		// CURSOR XY para ligar axis tooltips
		chart3.cursor = new am4charts.XYCursor();
		chart3.cursor.behavior = "none"; // zoomX, zoomY, panX, panY, panXY, none, etc
		//chart3.cursor.lineX.strokeWidth = 0.5;
		//loglogAmcharts.cursor.lineX.strokeDasharray = "";
		chart3.cursor.lineY.strokeWidth = 0.5;
		chart3.cursor.xAxis = categoryAxis;
		chart3.cursor.fullWidthLineX = true;
		chart3.cursor.lineX.strokeWidth = 0;
		chart3.cursor.lineX.fill = am4core.color("#8F3985");
		chart3.cursor.lineX.fillOpacity = 0.1;
		categoryAxis.cursorTooltipEnabled = false;

		var axisTooltip = valueAxis.tooltip;
		//axisTooltip.background.fill = am4core.color("#333");
		axisTooltip.background.strokeWidth = 1;
		axisTooltip.background.cornerRadius = 3;
		axisTooltip.dy = 5;
		axisTooltip.fillOpacity = 0.8;
		axisTooltip.fontSize = 12;

		var dropShadow = new am4core.DropShadowFilter();
		dropShadow.dy = 1;
		dropShadow.dx = 1;
		dropShadow.opacity = 0.5;
		axisTooltip.filters.push(dropShadow);


		chart3.exporting.menu = new am4core.ExportMenu();


		/////////////////////////////////////////////
		// CASOS POR MILHAO
		// Create chart instance
		var chart1 = am4core.create("casospormilhaodiv", am4charts.XYChart);
		chart1.dataSource.url = "stats.json";

		chart1.events.on("beforedatavalidated", function(ev) {
  		chart1.data.sort(function(a, b) {
    		return (b.casosMilhao - a.casosMilhao);
  		});
		});


		// // Add data
		// chart.data = [{
		// 	"pais": "IT",
		// 	"points": 2689,
		// 	"color": chart.colors.next(),
		// 	"bullet": "./flags/IT.png"
		// }, {
		// 	"pais": "GB",
		// 	"points": 1426,
		// 	"color": chart.colors.next(),
		// 	"bullet": "./flags/GB.png"
		// }];

		var title = chart1.titles.create();
		title.text = "[bold font-size: 18]Casos confirmados/milhão de habitantes[/]\n";
		title.textAlign = "middle";

		// Create axes
		var categoryAxis = chart1.xAxes.push(new am4charts.CategoryAxis());
		categoryAxis.dataFields.category = "country";
		categoryAxis.renderer.grid.template.disabled = true;
		categoryAxis.renderer.minGridDistance = 30;
		categoryAxis.renderer.inside = true;
		categoryAxis.renderer.labels.template.fill = am4core.color("#fff");
		categoryAxis.renderer.labels.template.fontSize = 10;

		var valueAxis = chart1.yAxes.push(new am4charts.ValueAxis());
		valueAxis.renderer.grid.template.strokeDasharray = "4,4";
		valueAxis.renderer.labels.template.disabled = false;
		//valueAxis.title.text = "%";
		//valueAxis.title.fontSize = 12;
		valueAxis.renderer.labels.template.fontSize = 10;
		valueAxis.min = 0;
		valueAxis.max = 7000;

		// Do not crop bullets
		chart1.maskBullets = false;

		// Remove padding
		//chart.paddingBottom = 0;

		chart1.numberFormatter.numberFormat = "#.";

		// Create series
		var series = chart1.series.push(new am4charts.ColumnSeries());
		series.dataFields.valueY = "casosMilhao";
		series.dataFields.categoryX = "country";
		series.strokeWidth = 0;
		// series.columns.template.propertyFields.fill = "color";
		// series.columns.template.propertyFields.stroke = "color";
		series.columns.template.column.cornerRadiusTopLeft = 4;
		series.columns.template.column.cornerRadiusTopRight = 4;
		series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}[/b]";

		series.heatRules.push({
			"target": series.columns.template,
			"property": "fill",
			"min": am4core.color("#2a4e75"),
			"max": am4core.color("#EE3E32"),
			"dataField": "valueY"
		});

		// Add bullets
		var bullet = series.bullets.push(new am4charts.Bullet());
		var image = bullet.createChild(am4core.Image);
		image.horizontalCenter = "middle";
		image.verticalCenter = "bottom";
		image.dy = 8; // vertical offset. can be negative to move upwards
		image.width = am4core.percent(60); // reducao do tamanho para 60%
		image.y = am4core.percent(100);
		image.propertyFields.href = "bullet";
		image.tooltipText = series.columns.template.tooltipText;
		image.propertyFields.fill = am4core.color("#eee");
		image.filters.push(new am4core.DropShadowFilter());

		// nova bullet para por valor na barra
		var label = series.columns.template.createChild(am4core.Label);
		label.text = "[#eee]{casosMilhao}[/]";
		label.align = "center";
		label.valign = "top";
		label.zIndex = 2;
		label.strokeWidth = 0; label.fontSize = 8; label.paddingTop = 10;


		// CURSOR XY para ligar axis tooltips
		chart1.cursor = new am4charts.XYCursor();
		chart1.cursor.behavior = "none"; // zoomX, zoomY, panX, panY, panXY, none, etc
		//chart1.cursor.lineX.strokeWidth = 0.5;
		//loglogAmcharts.cursor.lineX.strokeDasharray = "";
		chart1.cursor.lineY.strokeWidth = 0.5;
		chart1.cursor.xAxis = categoryAxis;
		chart1.cursor.fullWidthLineX = true;
		chart1.cursor.lineX.strokeWidth = 0;
		chart1.cursor.lineX.fill = am4core.color("#8F3985");
		chart1.cursor.lineX.fillOpacity = 0.1;
		categoryAxis.cursorTooltipEnabled = false;

		var axisTooltip = valueAxis.tooltip;
		//axisTooltip.background.fill = am4core.color("#333");
		axisTooltip.background.strokeWidth = 1;
		axisTooltip.background.cornerRadius = 3;
		axisTooltip.dy = 5;
		axisTooltip.fillOpacity = 0.8;
		axisTooltip.fontSize = 12;

		var dropShadow = new am4core.DropShadowFilter();
		dropShadow.dy = 1;
		dropShadow.dx = 1;
		dropShadow.opacity = 0.5;
		axisTooltip.filters.push(dropShadow);


		// Enable export
		chart1.exporting.menu = new am4core.ExportMenu();




		/////////////////////////////////////////////
		// ÓBITOS POR MILHAO
		// Create chart instance
		var chart4 = am4core.create("obitospormilhaodiv", am4charts.XYChart);
		chart4.dataSource.url = "stats.json";

		chart4.events.on("beforedatavalidated", function(ev) {
  		chart4.data.sort(function(a, b) {
    		return (b.obitosMilhao - a.obitosMilhao);
  		});
		});

		// Add data
		//chart.data = [{
		//			"pais": "IT",
		//			"points": 2689,
		//			"color": chart.colors.next(),
		//			"bullet": "./flags/IT.png"
		//		}, {
		//			"pais": "GB",
		//			"points": 1426,
		//			"color": chart.colors.next(),
		//			"bullet": "./flags/GB.png"
		//		}, {
		//			"pais": "NL",
		//			"points": 1601,
		//			"color": chart.colors.next(),
		//			"bullet": "./flags/NL.png"
		//		}, {
		//			"pais": "FR",
		//			"points": 2058,
		//			"color": chart.colors.next(),
		//			"bullet": "./flags/FR.png"
		//		}, {
		//			"pais": "ES",
		//			"points": 3693,
		//			"color": chart.colors.next(),
		//			"bullet": "./flags/ES.png"
		//
		//		}];

		var title = chart4.titles.create();
		title.text = "[bold font-size: 18]Óbitos/milhão de habitantes[/]\n";
		title.textAlign = "middle";

		//let colorSet = new am4core.ColorSet();
		// Create axes
		var categoryAxis = chart4.xAxes.push(new am4charts.CategoryAxis());
		categoryAxis.dataFields.category = "country";
		categoryAxis.renderer.grid.template.disabled = true;
		categoryAxis.renderer.minGridDistance = 30;
		categoryAxis.renderer.inside = true;
		categoryAxis.renderer.labels.template.fill = am4core.color("#fff");
		categoryAxis.renderer.labels.template.fontSize = 10;

		var valueAxis = chart4.yAxes.push(new am4charts.ValueAxis());
		valueAxis.renderer.grid.template.strokeDasharray = "4,4";
		valueAxis.renderer.labels.template.disabled = false;
		//valueAxis.title.text = "%";
		//valueAxis.title.fontSize = 12;
		valueAxis.renderer.labels.template.fontSize = 10;
		valueAxis.min = 0;
		//valueAxis.max = 600;


		// Do not crop bullets
		chart4.maskBullets = false;

		// Remove padding
		//chart4.paddingBottom = 0;

		chart4.numberFormatter.numberFormat = "#.";


		// Create series
		var series = chart4.series.push(new am4charts.ColumnSeries());
		series.dataFields.valueY = "obitosMilhao";
		series.dataFields.categoryX = "country";
		//series.columns.template.propertyFields.fill = am4core.color("#000");
		//series.columns.template.propertyFields.stroke = "color";
		series.columns.template.column.cornerRadiusTopLeft = 4;
		series.columns.template.column.cornerRadiusTopRight = 4;
		series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}[/b]";
		series.strokeWidth = 0;

		series.heatRules.push({
			"target": series.columns.template,
			"property": "fill",
			"min": am4core.color("#2a4e75"),
			"max": am4core.color("#EE3E32"),
			"dataField": "valueY"
		});
		// Add bullets
		var bullet = series.bullets.push(new am4charts.Bullet());
		var image = bullet.createChild(am4core.Image);
		image.horizontalCenter = "middle";
		image.verticalCenter = "bottom";
		image.dy = 8; // vertical offset. can be negative to move upwards
		image.width = am4core.percent(60); // reducao do tamanho para 60%
		image.y = am4core.percent(100);
		image.propertyFields.href = "bullet";
		image.tooltipText = series.columns.template.tooltipText;
		image.propertyFields.fill = am4core.color("#eee");
		image.filters.push(new am4core.DropShadowFilter());

		// nova bullet para por valor na barra
		var label = series.columns.template.createChild(am4core.Label);
		label.text = "[#eee]{obitosMilhao}[/]";
		label.align = "center";
		label.valign = "top";
		label.zIndex = 2;
		label.strokeWidth = 0; label.fontSize = 8; label.paddingTop = 10;


		// CURSOR XY para ligar axis tooltips
		chart4.cursor = new am4charts.XYCursor();
		chart4.cursor.behavior = "none"; // zoomX, zoomY, panX, panY, panXY, none, etc
		//chart4.cursor.lineX.strokeWidth = 0.5;
		//loglogAmcharts.cursor.lineX.strokeDasharray = "";
		chart4.cursor.lineY.strokeWidth = 0.5;
		chart4.cursor.xAxis = categoryAxis;
		chart4.cursor.fullWidthLineX = true;
		chart4.cursor.lineX.strokeWidth = 0;
		chart4.cursor.lineX.fill = am4core.color("#8F3985");
		chart4.cursor.lineX.fillOpacity = 0.1;
		categoryAxis.cursorTooltipEnabled = false;

		var axisTooltip = valueAxis.tooltip;
		//axisTooltip.background.fill = am4core.color("#333");
		axisTooltip.background.strokeWidth = 1;
		axisTooltip.background.cornerRadius = 3;
		axisTooltip.dy = 5;
		axisTooltip.fillOpacity = 0.8;
		axisTooltip.fontSize = 12;

		var dropShadow = new am4core.DropShadowFilter();
		dropShadow.dy = 1;
		dropShadow.dx = 1;
		dropShadow.opacity = 0.5;
		axisTooltip.filters.push(dropShadow);


		// Enable export
		chart4.exporting.menu = new am4core.ExportMenu();




		/////////////////////////////////////////////
		//TESTES POR MILHAO
		// Create chart instance
		var chart = am4core.create("testespormilhaodiv", am4charts.XYChart);
		chart.dataSource.url = "stats.json";

		chart.events.on("beforedatavalidated", function(ev) {
  		chart.data.sort(function(a, b) {
    		return (b.testesMilhao - a.testesMilhao);
  		});
		});


		var title = chart.titles.create();
		title.text = "[bold font-size: 18]Testes/milhão de habitantes[/]\n";
		title.textAlign = "middle";

		//let colorSet = new am4core.ColorSet();
		// Create axes
		var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
		categoryAxis.dataFields.category = "country";
		categoryAxis.renderer.grid.template.disabled = true;
		categoryAxis.renderer.minGridDistance = 30;
		categoryAxis.renderer.inside = true;
		categoryAxis.renderer.labels.template.fill = am4core.color("#fff");
		categoryAxis.renderer.labels.template.fontSize = 10;

		var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
		valueAxis.renderer.grid.template.strokeDasharray = "4,4";
		valueAxis.renderer.labels.template.disabled = false;
		//valueAxis.title.text = "%";
		//valueAxis.title.fontSize = 12;
		valueAxis.renderer.labels.template.fontSize = 10;
		valueAxis.min = 0;
		//valueAxis.max = 100000;

		//// axis break
		//var axisBreak = valueAxis.axisBreaks.create();
		//axisBreak.startValue = 61000;
		//axisBreak.endValue = 91000;
		// fixed axis break
		//var d = (axisBreak.endValue - axisBreak.startValue) / (valueAxis.max - valueAxis.min);
		//axisBreak.breakSize = 0.05 * (1 - d) / d; /// 0.05 means that the break will take 5% of the total value axis height

		////make break expand on hover
		//var hoverState = axisBreak.states.create("hover");
		//hoverState.properties.breakSize = 1;
		//hoverState.properties.opacity = 0.1;
		//hoverState.transitionDuration = 500;

		//axisBreak.defaultState.transitionDuration = 1000;


		// Do not crop bullets
		chart.maskBullets = false;

		// Remove padding
		//chart.paddingBottom = 0;

		chart.numberFormatter.numberFormat = "#";


		// Create series
		var series = chart.series.push(new am4charts.ColumnSeries());
		series.dataFields.valueY = "testesMilhao";
		series.dataFields.categoryX = "country";
		//series.columns.template.propertyFields.fill = am4core.color("#000");
		//series.columns.template.propertyFields.stroke = "color";
		series.columns.template.column.cornerRadiusTopLeft = 4;
		series.columns.template.column.cornerRadiusTopRight = 4;
		series.columns.template.tooltipText = "{categoryX}: [bold]{valueY}[/b]";
		series.strokeWidth = 0;

		series.heatRules.push({
			"target": series.columns.template,
			"property": "fill",
			"min": am4core.color("#2a4e75"),
			"max": am4core.color("#1b8a5a"),
			"dataField": "valueY"
		});
		// Add bullets
		var bullet = series.bullets.push(new am4charts.Bullet());
		var image = bullet.createChild(am4core.Image);
		image.horizontalCenter = "middle";
		image.verticalCenter = "bottom";
		image.dy = 8; // vertical offset. can be negative to move upwards
		image.width = am4core.percent(60); // reducao do tamanho para 60%
		image.y = am4core.percent(100);
		image.propertyFields.href = "bullet";
		image.tooltipText = series.columns.template.tooltipText;
		image.propertyFields.fill = am4core.color("#eee");
		image.filters.push(new am4core.DropShadowFilter());

		// nova bullet para por valor na barra
		var label = series.columns.template.createChild(am4core.Label);
		label.text = "[#eee]{testesMilhao}[/]";
		label.align = "center";
		label.valign = "top";
		label.zIndex = 2;
		label.strokeWidth = 0; label.fontSize = 8; label.paddingTop = 10;

		// CURSOR XY para ligar axis tooltips
		chart.cursor = new am4charts.XYCursor();
		chart.cursor.behavior = "none"; // zoomX, zoomY, panX, panY, panXY, none, etc
		//chart.cursor.lineX.strokeWidth = 0.5;
		//loglogAmcharts.cursor.lineX.strokeDasharray = "";
		chart.cursor.lineY.strokeWidth = 0.5;
		chart.cursor.xAxis = categoryAxis;
		chart.cursor.fullWidthLineX = true;
		chart.cursor.lineX.strokeWidth = 0;
		chart.cursor.lineX.fill = am4core.color("#8F3985");
		chart.cursor.lineX.fillOpacity = 0.1;
		categoryAxis.cursorTooltipEnabled = false;

		var axisTooltip = valueAxis.tooltip;
		//axisTooltip.background.fill = am4core.color("#333");
		axisTooltip.background.strokeWidth = 1;
		axisTooltip.background.cornerRadius = 3;
		axisTooltip.dy = 5;
		axisTooltip.fillOpacity = 0.8;
		axisTooltip.fontSize = 12;

		var dropShadow = new am4core.DropShadowFilter();
		dropShadow.dy = 1;
		dropShadow.dx = 1;
		dropShadow.opacity = 0.5;
		axisTooltip.filters.push(dropShadow);

		// Enable export
		chart.exporting.menu = new am4core.ExportMenu();


		////////////////////////////////////////////////////////
		// FUNÇÕES DE UTILIDADE GERAL
		function toggle(chart, eixo, botao) {
				eixo.logarithmic = eixo.logarithmic ? false : true;
				chart.invalidateData();
				// if (button.value == "Log -> Linear") {
				// 	button.value = "Linear -> Log";
				// }else{
				// 	button.value = "Log -> Linear";
				// }
				if (botao.label.text == "[bold #eee]Log[/] - [#800]Linear[/]") {
					botao.label.text = "[#800]Log[/] - [bold #eee]Linear[/]";
				}else{
					botao.label.text = "[bold #eee]Log[/] - [#800]Linear[/]";
				}
				//chart.invalidateRawData();
		}

	</script>
</body>

</html>
